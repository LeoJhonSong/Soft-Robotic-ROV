当深度变化幅度超过阈值且当前为坐底状态时判定为不再坐底
深度持续稳定时间计时
更新海底深度
启动自主抓取
ROV
BOLDGREEN
count超过阈值count
thresh时判定为坐底
由坐底开始
定深
尝试给软体臂程序发送目标坐标
已判定坐底
键盘键值与ROV动作映射
确认上位机与ROV通信建立成功
rov
进入ROV动作控制循环
确认上位机与ROV通信建立成功并开灯
当深度变化幅度超过阈值时判定为不再坐底并归零深度持续稳定时间
thresh过小时会产生噪声
count和count
悬停2个单位时间等ROV静止后获取当前深度
全速上浮3个单位时间
实时微调水平位置并全速下潜
视野内无目标时遍历水域
sendMsg
BOLDMAGENTA
视野内有扇贝或海参时跳转case43开始微调并坐底
坐底
从这一步开始为自主控制
当land
整个比赛过程中都应当处于这个循环中
当未人为操作且软体臂抓取未完成时持续坐底
每次刷新数据前都会归零接收ROV数据的变量
滤掉因为上位机端刷新数据过快而并非每次都能接收到数据产生的0
用depth
每次刷新数据前都会用memset归零接收ROV数据的变量
结束坐底
开始上浮并定深
急停
当目标丢失时跳回定深
直接跳转导致定深高度可能高了一些
全速坐底的同时微调水平位置
当目标在视野内但漂移出阈值框
当目标在阈值内时全速下潜
loc
当判定为坐底时break并跳到case59
这样的话当坐底后目标在阈值框外也会尝试抓取
但因为阈值较小因此确实应当尝试抓取
但因为阈值框较小因此确实应当尝试抓取
判定是否到达海底
当深度变化幅度超过阈值时判定为不在海底并归零深度持续稳定时间
rate即README中修正参数k
此处adjust
结合上一时刻是否位于海底和深度波动判断当前是否位于海底
跳回定深
位为目标的width
当判定为坐底后break并跳到case59
先判定是否有左右漂移及漂移值
然后判断是否有前后漂移及漂移值
微调ROI阈值
目标漂移值
向左为正
向上为正
要注意图像坐标系原点在图像左上角
优先微调漂移更严重方向
比较左右漂移值和前后漂移值大小
跳回坐底
当目标在ROI内时全速下潜
目标在视野中偏左则左移
偏右则右移
偏前则前移
偏后则后移
偏右则右转
目标在视野中偏左则左转
注意左右偏移时用转动来微调
当目标丢失时跳回坐底
微调时是否下潜
当目标丢失时跳出循环到case59
先水平微调好再全速下潜的同时微调水平位置
方法2
